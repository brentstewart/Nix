# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, pkgs, ... }:
let
  nixos-conf-editor = (import (pkgs.fetchFromGitHub {
    owner = "vlinkz";
    repo = "nixos-conf-editor";
    rev = "0.0.2";
    sha256 = "oQyjUSDC9/6nlHiD8bMl6O7XSMMayryMWQY4n3hmNEg=";
  })).default;
in 
{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
      ./ssh.nix
    ];

  # Bootloader.
    boot.loader.systemd-boot.enable = true;
    boot.loader.efi.canTouchEfiVariables = true;
    boot.loader.efi.efiSysMountPoint = "/boot/efi";

  networking.hostName = "brent-nix"; # Define your hostname.
  # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.

  # Configure network proxy if necessary
  # networking.proxy.default = "http://user:password@proxy:port/";
  # networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";

  # Enable networking
  networking.networkmanager.enable = true;

  # Set your time zone.
  time.timeZone = "America/New_York";

  # Select internationalisation properties.
  i18n.defaultLocale = "en_US.utf8";

  # Enable the X11 windowing system.
  services.xserver.enable = true;

  # Enable the GNOME Desktop Environment.
  # services.xserver.displayManager.gdm.enable = true;
  # services.xserver.desktopManager.gnome.enable = true;
     # Enable the KDE Plasma Desktop Environment.
  services.xserver.desktopManager.plasma5.runUsingSystemd = true;
  services.xserver.displayManager.sddm.enable = true;
  services.xserver.desktopManager.plasma5.enable = true;
  #services.xserver.displayManager.sessionpackages=pkgs.plasma-workspace.overrideAttrs;
  # Configure keymap in X11
  services.xserver = {
    layout = "us";
    xkbVariant = "";
  };

  # Enable CUPS to print documents.
  services.printing.enable = true;
  services.printing.drivers=[pkgs.brlaser];

  # Enable sound with pipewire.
  sound.enable = true;
  hardware.pulseaudio.enable = false;
  security.rtkit.enable = true;
  services.pipewire = {
    enable = true;
    alsa.enable = true;
    alsa.support32Bit = true;
    pulse.enable = true;
    # If you want to use JACK applications, uncomment this
    #jack.enable = true;

    # use the example session manager (no others are packaged yet so this is enabled by default,
    # no need to redefine it in your config for now)
    #media-session.enable = true;
  };
  # Attach to NFS
  fileSystems."/mnt/tools" = {
    device = "192.168.26.12:/files/tools";
    fsType = "nfs";
    options = ["x-systemd.automount" "noauto" ];
    };
  # Attach to SSHFS
  fileSystems."/mnt/music" = {
    device = "brent@192.168.26.12:/files/Music";
    fsType = "sshfs";
    };
  #Setup Fonts
    fonts.fonts=with pkgs; [
      noto-fonts
      dina-font
      proggyfonts
      nerdfonts
    ];
  # Enable touchpad support (enabled default in most desktopManager).
  # services.xserver.libinput.enable = true;

  # Define a user account. Don't forget to set a password with ‘passwd’.
  users.users.brent = {
    isNormalUser = true;
    description = "brent";
    extraGroups = [ "networkmanager" "wheel" ];
  };

  # Allow unfree packages
  nixpkgs.config.allowUnfree = true;

  # List packages installed in system profile. To search, run:
  # $ nix search wget
  environment.systemPackages = with pkgs; [
  #  vim # Do not forget to add an editor to edit configuration.nix! The Nano editor is also installed by default.
    nixos-conf-editor
    duff
    wget
    firefox
    flameshot
    calibre
    teams
    tilix
    unzip
    freeoffice
    libreoffice
    enpass
    vscode
    spotify
    filezilla
    traceroute
    nmap
    htop
    hugo
    git
    # geary
    unzip
    vlc
    git
    scribus
    # planner
    pithos
    # pdfshuffler
    thunderbird
    wireshark
    # librewolf-community
    postman
    # junction
    profile-sync-daemon
    # powerline-shell
    neofetch
    # openssh-server
    sshfs
    fail2ban
    # nfs-kernel-server
    # nfs-common
    # x2go-server
    # gigolo
    # gvfs-fuse
    # network-manager-pptp
    # network-manager-pptp-gnome
    #gnomeExtensions.dash-to-dock
    #gnomeExtensions.gsconnect
    #gnomeExtensions.forge
    #gnomeExtensions.vitals
    #gnomeExtensions.arcmenu
    #nautilus-image-converter
    #gnome-sushi
    #nautilus-admin
    #folder-color
  ];
  environment.cinnamon.excludePackages = [];

  # Some programs need SUID wrappers, can be configured further or are
  # started in user sessions.
  # programs.mtr.enable = true;
  # programs.gnupg.agent = {
  #   enable = true;
  #   enableSSHSupport = true;
  # };

  # List services that you want to enable:

  # Open ports in the firewall.
  # networking.firewall.allowedTCPPorts = [ ... ];
  # networking.firewall.allowedUDPPorts = [ ... ];
  # Or disable the firewall altogether.
   networking.firewall.enable = false;

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. It‘s perfectly fine and recommended to leavecatenate(variables, "bootdev", bootdev)
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  system.stateVersion = "22.05"; # Did you read the comment?
  system.autoUpgrade.enable = true;
  # system.x86_64-linux = derivation;
  nix.extraOptions = ''experimental-features = nix-command flakes'';
}
